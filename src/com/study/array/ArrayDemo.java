package com.study.array;

public class ArrayDemo {
    public static void main(String[] args) {
        /*
        -------------------------------------------------------------------------------------------
        作用:
            1.存储相同数据类型的一组数据
            2.对同类型数据集中存储、管理、便于遍历
        -------------------------------------------------------------------------------------------
        数组类型：数组的类型就是数组中存储的数据的类型
        -------------------------------------------------------------------------------------------
        要点:
            1.数组中的所有元素必须属于相同的数据类型
            2.数组中所有元素在内存中连续存储
        -------------------------------------------------------------------------------------------
        特点：数组本身也是一种引用类型数组名只是引用，指向堆中创建的数组对象，该对象保存一组其它引用或直接值
        -------------------------------------------------------------------------------------------
        数组的声明:
                1.告诉系统数据类型是什么
                2.语法:
                      数据类型[] 数组名；
        -------------------------------------------------------------------------------------------
        数组的创建：为数组分配内存空间 new 操作符的使用
        -------------------------------------------------------------------------------------------
        声明并创建数组：
                    数据类型[]数组名 = new数据类型[大小]；
        -------------------------------------------------------------------------------------------
        数组特点:
                1.数组有一个字段length，表示此数组对象可以存储多少元素即数组长度；length不是实际保存的元素个数
                2.“[]”语法是访问数组对象成员的唯一方式
                3.对象数组保存的是引用，基本类型数组直接保存基本类型的值
        -------------------------------------------------------------------------------------------
         */

        //创建一个长度为5的数组
        int[] arr = new int[10];
        //打印数组的长度
        System.out.println(arr.length);
        //数组默认值为0
        System.out.println(arr[0]);
        System.out.println(arr[1]);
        //给数组赋值
        arr[0] = 6;
        arr[1] = 66;
        arr[2] = 666;
        arr[3] = 6666;
        arr[4] = 66666;
        //输出数组指定位置元素
        System.out.println(arr[0]);
        System.out.println(arr[1]);
        System.out.println(arr[2]);
        System.out.println(arr[3]);
        System.out.println(arr[4]);
        //使用for循环遍历数组
        for (int i = 0; i < 5; i++) {
            System.out.println(arr[i]);
        }

    }
}
